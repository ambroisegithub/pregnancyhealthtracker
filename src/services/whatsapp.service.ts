import twilio from "twilio"
import { PregnancyForm } from "../database/models/PregnancyForm"
import type { User } from "../database/models/User"
import { PregnancyCalculator } from "../utils/pregnancyCalculator"
import { geminiService } from "./geminiService"
import dbConnection from "../database"

class WhatsAppService {
  private client: twilio.Twilio
  private whatsappNumber: string

  constructor() {
    const accountSid = process.env.TWILIO_ACCOUNT_SID
    const authToken = process.env.TWILIO_AUTH_TOKEN
    this.whatsappNumber = process.env.WHATSAPP_BUSINESS_NUMBER || ""

    // Enhanced debugging for credentials
    console.log("üîç WhatsApp Service Initialization Debug:")
    console.log(`- TWILIO_ACCOUNT_SID exists: ${!!accountSid}`)
    console.log(`- TWILIO_ACCOUNT_SID length: ${accountSid?.length || 0}`)
    console.log(`- TWILIO_ACCOUNT_SID starts with 'AC': ${accountSid?.startsWith("AC") || false}`)
    console.log(`- TWILIO_AUTH_TOKEN exists: ${!!authToken}`)
    console.log(`- TWILIO_AUTH_TOKEN length: ${authToken?.length || 0}`)
    console.log(`- WHATSAPP_BUSINESS_NUMBER: ${this.whatsappNumber}`)
    console.log(
      `- WHATSAPP_BUSINESS_NUMBER format valid: ${this.whatsappNumber.startsWith("+") || this.whatsappNumber.startsWith("whatsapp:")}`,
    )

    if (!accountSid || !authToken) {
      console.error("‚ùå Twilio credentials are missing!")
      console.error("Required environment variables:")
      console.error("- TWILIO_ACCOUNT_SID (should start with 'AC')")
      console.error("- TWILIO_AUTH_TOKEN")
      console.error("- WHATSAPP_BUSINESS_NUMBER (should start with '+' or 'whatsapp:')")
      throw new Error("Twilio credentials are not configured")
    }

    if (!accountSid.startsWith("AC")) {
      console.error("‚ùå Invalid TWILIO_ACCOUNT_SID format. Should start with 'AC'")
      throw new Error("Invalid Twilio Account SID format")
    }

    if (authToken.length < 32) {
      console.error("‚ùå TWILIO_AUTH_TOKEN appears to be too short")
      throw new Error("Invalid Twilio Auth Token format")
    }

    if (!this.whatsappNumber) {
      console.error("‚ùå WHATSAPP_BUSINESS_NUMBER is not configured")
      throw new Error("WhatsApp Business Number is not configured")
    }

    try {
      this.client = twilio(accountSid, authToken)
      console.log("‚úÖ Twilio client initialized successfully")
    } catch (error) {
      console.error("‚ùå Failed to initialize Twilio client:", error)
      throw new Error(`Failed to initialize Twilio client: ${error}`)
    }
  }

  async sendMessage(to: string, message: string): Promise<boolean> {
    try {
      console.log("üì± WhatsApp Send Message Debug:")
      console.log(`- To: ${to}`)
      console.log(`- From: whatsapp:${this.whatsappNumber}`)
      console.log(`- Message length: ${message.length}`)
      console.log(`- Message preview: ${message.substring(0, 100)}...`)

      // Validate phone number format
      const cleanTo = to.replace(/\D/g, "") // Remove non-digits
      if (cleanTo.length < 10) {
        console.error("‚ùå Invalid phone number format:", to)
        return false
      }

      // Ensure proper WhatsApp format
      const whatsappTo = to.startsWith("whatsapp:") ? to : `whatsapp:${to}`
      const whatsappFrom = this.whatsappNumber.startsWith("whatsapp:")
        ? this.whatsappNumber
        : `whatsapp:${this.whatsappNumber}`

      console.log(`- Formatted To: ${whatsappTo}`)
      console.log(`- Formatted From: ${whatsappFrom}`)

      // Test Twilio client before sending
      try {
        const account = await this.client.api.accounts(process.env.TWILIO_ACCOUNT_SID as string).fetch()
        console.log(`‚úÖ Twilio account verified: ${account.friendlyName} (${account.status})`)
      } catch (accountError) {
        console.error("‚ùå Twilio account verification failed:", accountError)
        console.error("This suggests invalid credentials or account issues")
        return false
      }

      const result = await this.client.messages.create({
        from: whatsappFrom,
        to: whatsappTo,
        body: message,
      })

      console.log(`‚úÖ WhatsApp message sent successfully: ${result.sid}`)
      console.log(`- Status: ${result.status}`)
      console.log(`- Direction: ${result.direction}`)
      console.log(`- Price: ${result.price} ${result.priceUnit}`)
      return true
    } catch (error: any) {
      console.error("‚ùå Error sending WhatsApp message:")
      console.error(`- Error type: ${error.constructor.name}`)
      console.error(`- Status: ${error.status}`)
      console.error(`- Code: ${error.code}`)
      console.error(`- Message: ${error.message}`)
      console.error(`- More info: ${error.moreInfo}`)
      console.error(`- Details:`, error.details)

      // Specific error handling
      if (error.code === 20003) {
        console.error("üîç Authentication Error (20003) Troubleshooting:")
        console.error("1. Verify your TWILIO_ACCOUNT_SID starts with 'AC'")
        console.error("2. Verify your TWILIO_AUTH_TOKEN is correct")
        console.error("3. Check if your Twilio account is active")
        console.error("4. Ensure WhatsApp is enabled for your account")
        console.error("5. Verify your WhatsApp Business Number is approved")
      } else if (error.code === 21211) {
        console.error("üîç Invalid Phone Number Error (21211)")
        console.error("- Check phone number format")
        console.error("- Ensure country code is included")
      } else if (error.code === 63016) {
        console.error("üîç WhatsApp Template Error (63016)")
        console.error("- Your message may need to use an approved template")
        console.error("- Or the recipient needs to message you first")
      }

      return false
    }
  }

  async sendDailyTip(user: User, pregnancyForm: PregnancyForm): Promise<boolean> {
    try {
      if (!user.phoneNumber || pregnancyForm.pregnancyStatus !== "Pregnant") {
        return false
      }

      // Update gestational age
      if (pregnancyForm.lastDateOfMenstruation) {
        const pregnancyDetails = PregnancyCalculator.calculatePregnancyDetails(
          new Date(pregnancyForm.lastDateOfMenstruation),
        )

        const tip = this.getDailyTip(
          pregnancyDetails.trimester,
          pregnancyDetails.gestationalAge.weeks,
          pregnancyDetails.gestationalAge.days,
          user.language || "en",
        )

        return await this.sendMessage(user.phoneNumber, tip)
      }

      return false
    } catch (error) {
      console.error("Error sending daily tip:", error)
      return false
    }
  }

  async sendMilestoneAlert(user: User, pregnancyForm: PregnancyForm, milestone: string): Promise<boolean> {
    try {
      if (!user.phoneNumber) return false

      const message = this.getMilestoneMessage(milestone, pregnancyForm, user.language || "en")
      return await this.sendMessage(user.phoneNumber, message)
    } catch (error) {
      console.error("Error sending milestone alert:", error)
      return false
    }
  }

  async handleIncomingMessage(from: string, body: string, user?: User, language = "en"): Promise<string> {
    try {
      // Remove 'whatsapp:' prefix if present
      const phoneNumber = from.replace("whatsapp:", "")

      if (!user) {
        return this.getRegistrationMessage(language)
      }

      // Get user's complete pregnancy context from database
      const fullContext = await this.getFullUserContext(user)

      // Language instructions for AI
      const languageInstructions = {
        en: "Respond in English",
        fr: "R√©pondez en fran√ßais",
        rw: "Subiza mu kinyarwanda",
      }

      // Generate AI response using Gemini with full context and language preference
      const aiResponse = await geminiService.generateText(`
        You are an AI pregnancy support assistant integrated with WhatsApp. You have access to the user's complete pregnancy information and should provide personalized, helpful responses.
        
        IMPORTANT: 
        - Keep responses under 1600 characters for WhatsApp compatibility
        - ${languageInstructions[language as keyof typeof languageInstructions] || languageInstructions.en}
        - The user's preferred language is ${language}
        
        User Information:
        ${fullContext}
        
        User's WhatsApp Message: "${body}"
        
        Instructions:
        1. Provide personalized advice based on their current pregnancy status and gestational age
        2. Be supportive, encouraging, and medically accurate
        3. If they ask about their status, provide their current pregnancy details
        4. For medical concerns, always advise consulting healthcare providers
        5. Use emojis to make responses friendly and engaging
        6. If they ask about their journey, provide a comprehensive overview of their current status
        7. Always respond in ${language} language
        
        Respond as a knowledgeable, caring pregnancy assistant who knows their specific situation.
      `)

      return aiResponse
    } catch (error) {
      console.error("Error handling incoming message:", error)

      const errorMessages = {
        en: "I'm sorry, I'm having trouble responding right now. Please try again later or contact your healthcare provider for urgent concerns. üè•",
        fr: "Je suis d√©sol√©, j'ai des difficult√©s √† r√©pondre en ce moment. Veuillez r√©essayer plus tard ou contacter votre professionnel de sant√© pour les pr√©occupations urgentes. üè•",
        rw: "Ihangane, mfite ikibazo cyo gusubiza ubu. Nyamuneka ongera ugerageze nyuma cyangwa uvugane n'umuganga wawe ku bibazo byihutirwa. üè•",
      }

      return errorMessages[language as keyof typeof errorMessages] || errorMessages.en
    }
  }

  private async getFullUserContext(user: User): Promise<string> {
    try {
      const pregnancyRepository = dbConnection.getRepository(PregnancyForm)

      // Get user's latest pregnancy form with all details
      const pregnancyForm = await pregnancyRepository.findOne({
        where: { user: { id: user.id } },
        relations: ["user", "user.profile"],
        order: { createdAt: "DESC" },
      })

      if (!pregnancyForm) {
        return `User: ${user.profile?.firstName || "User"} ${user.profile?.lastName || ""}
Phone: ${user.phoneNumber}
Language: ${user.language}
Status: No pregnancy information available yet. User needs to complete pregnancy form.`
      }

      // Update gestational age if pregnant
      let currentGestationalInfo = ""
      if (pregnancyForm.pregnancyStatus === "Pregnant" && pregnancyForm.lastDateOfMenstruation) {
        const pregnancyDetails = PregnancyCalculator.calculatePregnancyDetails(
          new Date(pregnancyForm.lastDateOfMenstruation),
        )

        // Update the form with current gestational age
        pregnancyForm.currentTrimester = pregnancyDetails.trimester
        pregnancyForm.gestationalWeeks = pregnancyDetails.gestationalAge.weeks
        pregnancyForm.gestationalDays = pregnancyDetails.gestationalAge.days

        // Save updated information
        await pregnancyRepository.save(pregnancyForm)

        currentGestationalInfo = `
Current Gestational Age: ${pregnancyDetails.gestationalAge.weeks} weeks and ${pregnancyDetails.gestationalAge.days} days
Current Trimester: ${pregnancyDetails.trimester}
Expected Delivery Date: ${pregnancyDetails.expectedDeliveryDate.toDateString()}
Days Pregnant: ${pregnancyDetails.gestationalAge.totalDays} days`
      }

      const context = `
User Profile:
- Name: ${user.profile?.firstName || "N/A"} ${user.profile?.lastName || ""}
- Phone: ${user.phoneNumber}
- Language: ${user.language}
- Date of Birth: ${user.profile?.dateOfBirth ? new Date(user.profile.dateOfBirth).toDateString() : "N/A"}
- Location: ${user.profile?.city || "N/A"}, ${user.profile?.country || "N/A"}

Pregnancy Information:
- Status: ${pregnancyForm.pregnancyStatus}
- Last Menstruation Date: ${pregnancyForm.lastDateOfMenstruation ? new Date(pregnancyForm.lastDateOfMenstruation).toDateString() : "N/A"}
- Gravida (Total Pregnancies): ${pregnancyForm.gravida || "N/A"}
- Term Births: ${pregnancyForm.term || "N/A"}
- Preterm Births: ${pregnancyForm.preterm || "N/A"}
- Abortions/Miscarriages: ${pregnancyForm.abortion || "N/A"}
- Living Children: ${pregnancyForm.living || "N/A"}${currentGestationalInfo}

Form Submitted: ${pregnancyForm.createdAt ? new Date(pregnancyForm.createdAt).toDateString() : "N/A"}`

      return context
    } catch (error) {
      console.error("Error getting full user context:", error)
      return `User: ${user.profile?.firstName || "User"}, Phone: ${user.phoneNumber}, Language: ${user.language}
Error: Could not retrieve complete pregnancy information.`
    }
  }

  private getDailyTip(trimester: number, weeks: number, days: number, language = "en"): string {
    const tips = {
      en: {
        1: [
          `üå± Week ${weeks}: Your baby is developing rapidly! Take folic acid daily and avoid alcohol. Stay hydrated! üíß`,
          `ü§± Week ${weeks}: Morning sickness is common. Try eating small, frequent meals. Ginger tea can help! ü´ñ`,
          `üíä Week ${weeks}: Don't forget your prenatal vitamins! They're crucial for baby's development. üë∂`,
          `üö´ Week ${weeks}: Avoid raw fish, unpasteurized dairy, and deli meats. Your baby's safety comes first! üõ°Ô∏è`,
          `üò¥ Week ${weeks}: Rest is important! Your body is working hard. Listen to it and take breaks. üí§`,
        ],
        2: [
          `‚ú® Week ${weeks}: Welcome to the golden trimester! Energy levels often improve now. Enjoy! üåü`,
          `ü§∞ Week ${weeks}: Your bump is showing! Time for maternity clothes shopping. Embrace the changes! üëó`,
          `üèÉ‚Äç‚ôÄÔ∏è Week ${weeks}: Gentle exercise like walking or prenatal yoga is great. Stay active safely! üßò‚Äç‚ôÄÔ∏è`,
          `üçé Week ${weeks}: Focus on calcium-rich foods. Your baby's bones are developing rapidly! ü¶¥`,
          `üìÖ Week ${weeks}: Schedule your anatomy scan if you haven't already. Exciting times ahead! üîç`,
        ],
        3: [
          `üéí Week ${weeks}: Start preparing your hospital bag. Include comfortable clothes and baby essentials! üë∂`,
          `ü´Å Week ${weeks}: Practice breathing exercises for labor. Deep breaths help with relaxation! üòÆ‚Äçüí®`,
          `üçº Week ${weeks}: Consider breastfeeding classes. Knowledge is power for new moms! üìö`,
          `‚ö° Week ${weeks}: You might feel more tired. Rest when you can - baby will be here soon! üò¥`,
          `üè• Week ${weeks}: Discuss your birth plan with your doctor. Communication is key! üí¨`,
        ],
      },
      fr: {
        1: [
          `üå± Semaine ${weeks}: Votre b√©b√© se d√©veloppe rapidement! Prenez de l'acide folique quotidiennement et √©vitez l'alcool. Restez hydrat√©e! üíß`,
          `ü§± Semaine ${weeks}: Les naus√©es matinales sont courantes. Essayez de manger de petits repas fr√©quents. Le th√© au gingembre peut aider! ü´ñ`,
          `üíä Semaine ${weeks}: N'oubliez pas vos vitamines pr√©natales! Elles sont cruciales pour le d√©veloppement de b√©b√©. üë∂`,
          `üö´ Semaine ${weeks}: √âvitez le poisson cru, les produits laitiers non pasteuris√©s et la charcuterie. La s√©curit√© de votre b√©b√© avant tout! üõ°Ô∏è`,
          `üò¥ Semaine ${weeks}: Le repos est important! Votre corps travaille dur. √âcoutez-le et prenez des pauses. üí§`,
        ],
        2: [
          `‚ú® Semaine ${weeks}: Bienvenue au trimestre dor√©! Les niveaux d'√©nergie s'am√©liorent souvent maintenant. Profitez-en! üåü`,
          `ü§∞ Semaine ${weeks}: Votre ventre se montre! Il est temps de faire du shopping de v√™tements de maternit√©. Embrassez les changements! üëó`,
          `üèÉ‚Äç‚ôÄÔ∏è Semaine ${weeks}: L'exercice doux comme la marche ou le yoga pr√©natal est excellent. Restez active en s√©curit√©! üßò‚Äç‚ôÄÔ∏è`,
          `üçé Semaine ${weeks}: Concentrez-vous sur les aliments riches en calcium. Les os de votre b√©b√© se d√©veloppent rapidement! ü¶¥`,
          `üìÖ Semaine ${weeks}: Planifiez votre √©chographie anatomique si ce n'est pas d√©j√† fait. Des moments excitants √† venir! üîç`,
        ],
        3: [
          `üéí Semaine ${weeks}: Commencez √† pr√©parer votre sac d'h√¥pital. Incluez des v√™tements confortables et les essentiels pour b√©b√©! üë∂`,
          `ü´Å Semaine ${weeks}: Pratiquez des exercices de respiration pour l'accouchement. Les respirations profondes aident √† la relaxation! üòÆ‚Äçüí®`,
          `üçº Semaine ${weeks}: Consid√©rez les cours d'allaitement. La connaissance est le pouvoir pour les nouvelles mamans! üìö`,
          `‚ö° Semaine ${weeks}: Vous pourriez vous sentir plus fatigu√©e. Reposez-vous quand vous le pouvez - b√©b√© sera bient√¥t l√†! üò¥`,
          `üè• Semaine ${weeks}: Discutez de votre plan de naissance avec votre m√©decin. La communication est la cl√©! üí¨`,
        ],
      },
      rw: {
        1: [
          `üå± Icyumweru ${weeks}: Uruhinja rwawe rukura vuba! Nywa acide folique buri munsi kandi wirinde inzoga. Komeza unywa amazi! üíß`,
          `ü§± Icyumweru ${weeks}: Kuraguza mu gitondo ni ibisanzwe. Gerageza kurya ibiryo bike kenshi. Icyayi cya ginger gishobora gufasha! ü´ñ`,
          `üíä Icyumweru ${weeks}: Ntiwibagirwe vitamini zawe za mbere y'inda! Ni ingenzi mu iterambere ry'uruhinja. üë∂`,
          `üö´ Icyumweru ${weeks}: Wirinde amafi atatemba, amata adatemba, n'inyama z'ibikoresho. Umutekano w'uruhinja rwawe ni ingenzi! üõ°Ô∏è`,
          `üò¥ Icyumweru ${weeks}: Kuruhuka ni ingenzi! Umubiri wawe ukora cyane. Wumve kandi ufate ikiruhuko. üí§`,
        ],
        2: [
          `‚ú® Icyumweru ${weeks}: Murakaza neza mu gihembwe cy'or! Imbaraga zirashobora kuzamuka ubu. Wishimire! üåü`,
          `ü§∞ Icyumweru ${weeks}: Inda yawe iragaragara! Ni igihe cyo kugura imyenda y'abagore batwite. Kwakira impinduka! üëó`,
          `üèÉ‚Äç‚ôÄÔ∏è Icyumweru ${weeks}: Imyitozo yoroshye nko kugenda cyangwa yoga ya mbere y'inda ni byiza. Komeza ukora mu mutekano! üßò‚Äç‚ôÄÔ∏è`,
          `üçé Icyumweru ${weeks}: Wibande ku biryo bifite calcium nyinshi. Amagufwa y'uruhinja rwawe akura vuba! ü¶¥`,
          `üìÖ Icyumweru ${weeks}: Tegura isuzuma ry'imiterere niba utarakibikora. Ibihe bishimishije bizaza! üîç`,
        ],
        3: [
          `üéí Icyumweru ${weeks}: Tangira gutegura umufuka w'ibitaro. Shyiramo imyenda yoroshye n'ibikenewe n'uruhinja! üë∂`,
          `ü´Å Icyumweru ${weeks}: Witoze imyitozo yo guhumeka ku kubyara. Guhumeka cyane bifasha mu kuruhuka! üòÆ‚Äçüí®`,
          `üçº Icyumweru ${weeks}: Tekereza ku masomo yo konsa. Ubumenyi ni imbaraga ku ba nyina bashya! üìö`,
          `‚ö° Icyumweru ${weeks}: Ushobora kwumva unanirwa cyane. Ruhuka igihe ushobora - uruhinja ruzaza vuba! üò¥`,
          `üè• Icyumweru ${weeks}: Ganira na muganga wawe ku gahunda yawe yo kubyara. Itumanaho ni urufunguzo! üí¨`,
        ],
      },
    }

    const languageTips = tips[language as keyof typeof tips] || tips.en
    const trimesterTips = languageTips[trimester as 1 | 2 | 3] || languageTips[1]
    const randomTip = trimesterTips[Math.floor(Math.random() * trimesterTips.length)]

    return randomTip
  }

  private getMilestoneMessage(milestone: string, pregnancyForm: PregnancyForm, language = "en"): string {
    type MilestoneKey =
      | "first_trimester_end"
      | "anatomy_scan"
      | "glucose_screening"
      | "third_trimester"
      | "full_term"
      | "overdue"

    const messages = {
      en: {
        first_trimester_end: `üéâ Congratulations! You've completed your first trimester! The risk of miscarriage significantly decreases now. Time to share the good news? üíï`,
        anatomy_scan: `üîç It's time for your anatomy scan (18-22 weeks)! This detailed ultrasound checks baby's development. So exciting! üë∂üì∏`,
        glucose_screening: `ü©∏ Glucose screening time (24-28 weeks)! This test checks for gestational diabetes. Don't worry, it's routine! üè•`,
        third_trimester: `üéä Welcome to your third trimester! Baby is getting ready to meet you. Start preparing for delivery! ü§±`,
        full_term: `üåü You're full term now! Baby could arrive any day. Watch for signs of labor and stay close to the hospital! üè•`,
        overdue: `‚è∞ You're past your due date, but that's normal! Many babies arrive fashionably late. Stay in touch with your doctor! üë©‚Äç‚öïÔ∏è`,
      },
      fr: {
        first_trimester_end: `üéâ F√©licitations! Vous avez termin√© votre premier trimestre! Le risque de fausse couche diminue consid√©rablement maintenant. Il est temps de partager la bonne nouvelle? üíï`,
        anatomy_scan: `üîç Il est temps pour votre √©chographie anatomique (18-22 semaines)! Cette √©chographie d√©taill√©e v√©rifie le d√©veloppement de b√©b√©. Si excitant! üë∂üì∏`,
        glucose_screening: `ü©∏ Temps de d√©pistage du glucose (24-28 semaines)! Ce test v√©rifie le diab√®te gestationnel. Ne vous inqui√©tez pas, c'est de routine! üè•`,
        third_trimester: `üéä Bienvenue dans votre troisi√®me trimestre! B√©b√© se pr√©pare √† vous rencontrer. Commencez √† vous pr√©parer pour l'accouchement! ü§±`,
        full_term: `üåü Vous √™tes √† terme maintenant! B√©b√© pourrait arriver n'importe quel jour. Surveillez les signes de travail et restez pr√®s de l'h√¥pital! üè•`,
        overdue: `‚è∞ Vous avez d√©pass√© votre date d'accouchement, mais c'est normal! Beaucoup de b√©b√©s arrivent fashionablement en retard. Restez en contact avec votre m√©decin! üë©‚Äç‚öïÔ∏è`,
      },
      rw: {
        first_trimester_end: `üéâ Amashimwe! Warangije igihembwe cyawe cya mbere! Ibyago byo gutakaza inda bigabanuka cyane ubu. Ni igihe cyo gutangaza amakuru meza? üíï`,
        anatomy_scan: `üîç Ni igihe cyo gukora isuzuma ry'imiterere (ibyumweru 18-22)! Iri suzuma rirambuye rigenzura iterambere ry'uruhinja. Bishimishije cyane! üë∂üì∏`,
        glucose_screening: `ü©∏ Igihe cyo gupima glucose (ibyumweru 24-28)! Iki kipimo gisuzuma diyabete y'inda. Ntugire ubwoba, ni ibisanzwe! üè•`,
        third_trimester: `üéä Murakaza neza mu gihembwe cyawe cya gatatu! Uruhinja rutegura guhura nawe. Tangira kwihugura kubyara! ü§±`,
        full_term: `üåü Ubu uri mu gihe cyuzuye! Uruhinja rushobora kuza umunsi uwariwo wose. Reba ibimenyetso byo kubyara kandi ugume hafi y'ibitaro! üè•`,
        overdue: `‚è∞ Warenga itariki yawe yo kubyara, ariko ni ibisanzwe! Abana benshi baza batinze neza. Komeza uvugana na muganga wawe! üë©‚Äç‚öïÔ∏è`,
      },
    }

    const languageMessages = messages[language as keyof typeof messages] || messages.en

    if (milestone in languageMessages) {
      return languageMessages[milestone as MilestoneKey]
    }

    const defaultMessages = {
      en: `üìÖ Important milestone reached! Check with your healthcare provider for next steps. üë©‚Äç‚öïÔ∏è`,
      fr: `üìÖ √âtape importante atteinte! V√©rifiez avec votre professionnel de sant√© pour les prochaines √©tapes. üë©‚Äç‚öïÔ∏è`,
      rw: `üìÖ Intambwe y'ingenzi yagezweho! Reba na muganga wawe intambwe zikurikira. üë©‚Äç‚öïÔ∏è`,
    }

    return defaultMessages[language as keyof typeof defaultMessages] || defaultMessages.en
  }

  private getRegistrationMessage(language = "en"): string {
    const messages = {
      en: `üëã Welcome to Pregnancy Support! 

To get personalized pregnancy tips and AI support, please:

1Ô∏è‚É£ Register in our app
2Ô∏è‚É£ Complete your pregnancy form  
3Ô∏è‚É£ Link your WhatsApp number

Then I can provide personalized advice based on your pregnancy journey! ü§±

Need help? Contact our support team.`,
      fr: `üëã Bienvenue dans Pregnancy Support! 

Pour obtenir des conseils de grossesse personnalis√©s et un support IA, veuillez:

1Ô∏è‚É£ Vous inscrire dans notre application
2Ô∏è‚É£ Compl√©ter votre formulaire de grossesse  
3Ô∏è‚É£ Lier votre num√©ro WhatsApp

Ensuite, je peux fournir des conseils personnalis√©s bas√©s sur votre parcours de grossesse! ü§±

Besoin d'aide? Contactez notre √©quipe de support.`,
      rw: `üëã Murakaza neza kuri Pregnancy Support! 

Kugira ngo ubone inama z'inda zihariye n'ubufasha bwa AI, nyamuneka:

1Ô∏è‚É£ Iyandikishe muri application yacu
2Ô∏è‚É£ Uzuza ifishi yawe y'inda  
3Ô∏è‚É£ Huza nimero yawe ya WhatsApp

Noneho nshobora gutanga inama zihariye zishingiye ku rugendo rwawe rw'inda! ü§±

Ukeneye ubufasha? Vugana n'itsinda ryacu ry'ubufasha.`,
    }

    return messages[language as keyof typeof messages] || messages.en
  }
}

export const whatsappService = new WhatsAppService()
